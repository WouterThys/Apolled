

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Jul  8 20:28:39 2019

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15  0000                     
    16                           ; Version 1.44
    17                           ; Generated 14/09/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F2550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _PORTAbits	set	3968
    51  0000                     _PORTB	set	3969
    52                           
    53                           ; #config settings
    54  0000                     
    55                           	psect	cinit
    56  007DD4                     __pcinit:
    57                           	opt stack 0
    58  007DD4                     start_initialization:
    59                           	opt stack 0
    60  007DD4                     __initialization:
    61                           	opt stack 0
    62                           
    63                           ; Clear objects allocated to COMRAM (13 bytes)
    64  007DD4  EE00  F012         	lfsr	0,__pbssCOMRAM
    65  007DD8  0E0D               	movlw	13
    66  007DDA                     clear_0:
    67  007DDA  6AEE               	clrf	postinc0,c
    68  007DDC  06E8               	decf	wreg,f,c
    69  007DDE  E1FD               	bnz	clear_0
    70  007DE0                     end_of_initialization:
    71                           	opt stack 0
    72  007DE0                     __end_of__initialization:
    73                           	opt stack 0
    74  007DE0  0100               	movlb	0
    75  007DE2  EFF3  F03E         	goto	_main	;jump to C main() function
    76                           postinc0	equ	0xFEE
    77                           wreg	equ	0xFE8
    78                           
    79                           	psect	bssCOMRAM
    80  000012                     __pbssCOMRAM:
    81                           	opt stack 0
    82  000012                     _row:
    83                           	opt stack 0
    84  000012                     	ds	13
    85                           postinc0	equ	0xFEE
    86                           wreg	equ	0xFE8
    87                           
    88                           	psect	cstackCOMRAM
    89  000001                     __pcstackCOMRAM:
    90                           	opt stack 0
    91  000001                     updateLeds@b:
    92                           	opt stack 0
    93  000001                     initRowConfig@config:
    94                           	opt stack 0
    95                           
    96                           ; 2 bytes @ 0x0
    97  000001                     	ds	1
    98  000002                     updateLeds@g:
    99                           	opt stack 0
   100                           
   101                           ; 1 bytes @ 0x1
   102  000002                     	ds	1
   103  000003                     initRowConfig@count:
   104                           	opt stack 0
   105  000003                     updateLeds@s:
   106                           	opt stack 0
   107                           
   108                           ; 1 bytes @ 0x2
   109  000003                     	ds	1
   110  000004                     ??_initRowConfig:
   111  000004                     ??_updateLeds:
   112                           
   113                           ; 1 bytes @ 0x3
   114  000004                     	ds	2
   115  000006                     initRowConfig@i:
   116                           	opt stack 0
   117  000006                     updateLeds@r:
   118                           	opt stack 0
   119                           
   120                           ; 1 bytes @ 0x5
   121  000006                     	ds	1
   122  000007                     ??_tick:
   123                           
   124                           ; 1 bytes @ 0x6
   125  000007                     	ds	5
   126  00000C                     tick@r:
   127                           	opt stack 0
   128                           
   129                           ; 1 bytes @ 0xB
   130  00000C                     	ds	1
   131  00000D                     tick@g:
   132                           	opt stack 0
   133                           
   134                           ; 1 bytes @ 0xC
   135  00000D                     	ds	1
   136  00000E                     tick@b:
   137                           	opt stack 0
   138                           
   139                           ; 1 bytes @ 0xD
   140  00000E                     	ds	1
   141  00000F                     tick@node:
   142                           	opt stack 0
   143                           
   144                           ; 2 bytes @ 0xE
   145  00000F                     	ds	2
   146  000011                     ??_main:
   147                           
   148                           ; 1 bytes @ 0x10
   149  000011                     	ds	1
   150                           postinc0	equ	0xFEE
   151                           wreg	equ	0xFE8
   152                           
   153 ;;
   154 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   155 ;;
   156 ;; *************** function _main *****************
   157 ;; Defined at:
   158 ;;		line 37 in file "Main.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;		None
   163 ;; Return value:  Size  Location     Type
   164 ;;                  1    wreg      void 
   165 ;; Registers used:
   166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   167 ;; Tracked objects:
   168 ;;		On entry : 0/0
   169 ;;		On exit  : 0/0
   170 ;;		Unchanged: 0/0
   171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   172 ;;      Params:         0       0       0       0       0       0       0       0       0
   173 ;;      Locals:         0       0       0       0       0       0       0       0       0
   174 ;;      Temps:          1       0       0       0       0       0       0       0       0
   175 ;;      Totals:         1       0       0       0       0       0       0       0       0
   176 ;;Total ram usage:        1 bytes
   177 ;; Hardware stack levels required when called:    2
   178 ;; This function calls:
   179 ;;		_initRowConfig
   180 ;;		_ledDriverInit
   181 ;;		_tick
   182 ;; This function is called by:
   183 ;;		Startup code after reset
   184 ;; This function uses a non-reentrant model
   185 ;;
   186                           
   187                           	psect	text0
   188  007DE6                     __ptext0:
   189                           	opt stack 0
   190  007DE6                     _main:
   191                           	opt stack 29
   192                           
   193                           ;Main.c: 39: initRowConfig(&row, 5);
   194                           
   195                           ;incstack = 0
   196  007DE6  0E12               	movlw	low _row
   197  007DE8  6E01               	movwf	initRowConfig@config,c
   198  007DEA  0E00               	movlw	high _row
   199  007DEC  6E02               	movwf	initRowConfig@config+1,c
   200  007DEE  0E05               	movlw	5
   201  007DF0  6E03               	movwf	initRowConfig@count,c
   202  007DF2  EC28  F03F         	call	_initRowConfig	;wreg free
   203                           
   204                           ;Main.c: 40: ledDriverInit(5);
   205  007DF6  0E05               	movlw	5
   206  007DF8  ECE9  F03E         	call	_ledDriverInit
   207  007DFC                     
   208                           ;Main.c: 45: tick();
   209  007DFC  EC8F  F03F         	call	_tick	;wreg free
   210                           
   211                           ;Main.c: 46: _delay((unsigned long)((1)*(16000000/4000.0)));
   212  007E00  0E06               	movlw	6
   213  007E02  6E11               	movwf	??_main& (0+255),c
   214  007E04  0E30               	movlw	48
   215  007E06                     u277:
   216  007E06  2EE8               	decfsz	wreg,f,c
   217  007E08  D7FE               	bra	u277
   218  007E0A  2E11               	decfsz	??_main& (0+255),f,c
   219  007E0C  D7FC               	bra	u277
   220  007E0E  D000               	nop2	
   221  007E10  D7F5               	goto	l17
   222  007E12                     __end_of_main:
   223                           	opt stack 0
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           
   227 ;; *************** function _tick *****************
   228 ;; Defined at:
   229 ;;		line 51 in file "Main.c"
   230 ;; Parameters:    Size  Location     Type
   231 ;;		None
   232 ;; Auto vars:     Size  Location     Type
   233 ;;  node            2   14[COMRAM] struct .
   234 ;;  b               1   13[COMRAM] unsigned char 
   235 ;;  g               1   12[COMRAM] unsigned char 
   236 ;;  r               1   11[COMRAM] unsigned char 
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   246 ;;      Params:         0       0       0       0       0       0       0       0       0
   247 ;;      Locals:         5       0       0       0       0       0       0       0       0
   248 ;;      Temps:          5       0       0       0       0       0       0       0       0
   249 ;;      Totals:        10       0       0       0       0       0       0       0       0
   250 ;;Total ram usage:       10 bytes
   251 ;; Hardware stack levels used:    1
   252 ;; Hardware stack levels required when called:    1
   253 ;; This function calls:
   254 ;;		_updateLeds
   255 ;; This function is called by:
   256 ;;		_main
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text1
   261  007F1E                     __ptext1:
   262                           	opt stack 0
   263  007F1E                     _tick:
   264                           	opt stack 29
   265                           
   266                           ;Main.c: 54: RGBNode_t node = row.node_array[row.selected_node];
   267                           
   268                           ;incstack = 0
   269  007F1E  501D               	movf	_row+11,w,c
   270  007F20  0D02               	mullw	2
   271  007F22  0E13               	movlw	low (_row+1)
   272  007F24  24F3               	addwf	prodl,w,c
   273  007F26  6ED9               	movwf	fsr2l,c
   274  007F28  0E00               	movlw	high (_row+1)
   275  007F2A  20F4               	addwfc	prodh,w,c
   276  007F2C  6EDA               	movwf	fsr2h,c
   277  007F2E  CFDE F00F          	movff	postinc2,tick@node
   278  007F32  CFDD F010          	movff	postdec2,tick@node+1
   279                           
   280                           ;Main.c: 55: uint8_t r = ((uint8_t)((node.R & ( 1 << row.rgb_bit_shift )) >> row.rgb_bit
      +                          _shift));
   281  007F36  C01E  F007         	movff	_row+12,??_tick
   282  007F3A  500F               	movf	tick@node,w,c
   283  007F3C  0B0F               	andlw	15
   284  007F3E  6E08               	movwf	(??_tick+1)& (0+255),c
   285  007F40  C01E  F009         	movff	_row+12,??_tick+2
   286  007F44  0E01               	movlw	1
   287  007F46  6E0A               	movwf	(??_tick+3)& (0+255),c
   288  007F48  2A09               	incf	??_tick+2,f,c
   289  007F4A  D002               	goto	u194
   290  007F4C                     u195:
   291  007F4C  90D8               	bcf	status,0,c
   292  007F4E  360A               	rlcf	??_tick+3,f,c
   293  007F50                     u194:
   294  007F50  2E09               	decfsz	??_tick+2,f,c
   295  007F52  D7FC               	goto	u195
   296  007F54  500A               	movf	??_tick+3,w,c
   297  007F56  1408               	andwf	??_tick+1,w,c
   298  007F58  6E0B               	movwf	(??_tick+4)& (0+255),c
   299  007F5A  2A07               	incf	??_tick,f,c
   300  007F5C  D002               	goto	u204
   301  007F5E                     u205:
   302  007F5E  90D8               	bcf	status,0,c
   303  007F60  320B               	rrcf	??_tick+4,f,c
   304  007F62                     u204:
   305  007F62  2E07               	decfsz	??_tick,f,c
   306  007F64  D7FC               	goto	u205
   307  007F66  500B               	movf	??_tick+4,w,c
   308  007F68  6E0C               	movwf	tick@r,c
   309                           
   310                           ;Main.c: 56: uint8_t g = ((uint8_t)((node.G & ( 1 << row.rgb_bit_shift )) >> row.rgb_bit
      +                          _shift));
   311  007F6A  C01E  F007         	movff	_row+12,??_tick
   312  007F6E  380F               	swapf	tick@node,w,c
   313  007F70  0B0F               	andlw	15
   314  007F72  6E08               	movwf	(??_tick+1)& (0+255),c
   315  007F74  C01E  F009         	movff	_row+12,??_tick+2
   316  007F78  0E01               	movlw	1
   317  007F7A  6E0A               	movwf	(??_tick+3)& (0+255),c
   318  007F7C  2A09               	incf	??_tick+2,f,c
   319  007F7E  D002               	goto	u214
   320  007F80                     u215:
   321  007F80  90D8               	bcf	status,0,c
   322  007F82  360A               	rlcf	??_tick+3,f,c
   323  007F84                     u214:
   324  007F84  2E09               	decfsz	??_tick+2,f,c
   325  007F86  D7FC               	goto	u215
   326  007F88  500A               	movf	??_tick+3,w,c
   327  007F8A  1408               	andwf	??_tick+1,w,c
   328  007F8C  6E0B               	movwf	(??_tick+4)& (0+255),c
   329  007F8E  2A07               	incf	??_tick,f,c
   330  007F90  D002               	goto	u224
   331  007F92                     u225:
   332  007F92  90D8               	bcf	status,0,c
   333  007F94  320B               	rrcf	??_tick+4,f,c
   334  007F96                     u224:
   335  007F96  2E07               	decfsz	??_tick,f,c
   336  007F98  D7FC               	goto	u225
   337  007F9A  500B               	movf	??_tick+4,w,c
   338  007F9C  6E0D               	movwf	tick@g,c
   339                           
   340                           ;Main.c: 57: uint8_t b = ((uint8_t)((node.B & ( 1 << row.rgb_bit_shift )) >> row.rgb_bit
      +                          _shift));
   341  007F9E  C01E  F007         	movff	_row+12,??_tick
   342  007FA2  5010               	movf	tick@node+1,w,c
   343  007FA4  0B0F               	andlw	15
   344  007FA6  6E08               	movwf	(??_tick+1)& (0+255),c
   345  007FA8  C01E  F009         	movff	_row+12,??_tick+2
   346  007FAC  0E01               	movlw	1
   347  007FAE  6E0A               	movwf	(??_tick+3)& (0+255),c
   348  007FB0  2A09               	incf	??_tick+2,f,c
   349  007FB2  D002               	goto	u234
   350  007FB4                     u235:
   351  007FB4  90D8               	bcf	status,0,c
   352  007FB6  360A               	rlcf	??_tick+3,f,c
   353  007FB8                     u234:
   354  007FB8  2E09               	decfsz	??_tick+2,f,c
   355  007FBA  D7FC               	goto	u235
   356  007FBC  500A               	movf	??_tick+3,w,c
   357  007FBE  1408               	andwf	??_tick+1,w,c
   358  007FC0  6E0B               	movwf	(??_tick+4)& (0+255),c
   359  007FC2  2A07               	incf	??_tick,f,c
   360  007FC4  D002               	goto	u244
   361  007FC6                     u245:
   362  007FC6  90D8               	bcf	status,0,c
   363  007FC8  320B               	rrcf	??_tick+4,f,c
   364  007FCA                     u244:
   365  007FCA  2E07               	decfsz	??_tick,f,c
   366  007FCC  D7FC               	goto	u245
   367  007FCE  500B               	movf	??_tick+4,w,c
   368  007FD0  6E0E               	movwf	tick@b,c
   369                           
   370                           ;Main.c: 60: updateLeds(r, g, b, row.selected_node);
   371  007FD2  C00D  F001         	movff	tick@g,updateLeds@b
   372  007FD6  C00E  F002         	movff	tick@b,updateLeds@g
   373  007FDA  C01D  F003         	movff	_row+11,updateLeds@s
   374  007FDE  500C               	movf	tick@r,w,c
   375  007FE0  EC09  F03F         	call	_updateLeds
   376                           
   377                           ;Main.c: 63: row.selected_node++;
   378  007FE4  2A1D               	incf	_row+11,f,c
   379                           
   380                           ;Main.c: 64: if (row.selected_node >= row.node_count) {
   381  007FE6  5012               	movf	_row,w,c
   382  007FE8  5C1D               	subwf	_row+11,w,c
   383  007FEA  A0D8               	btfss	status,0,c
   384  007FEC  0012               	return	
   385                           
   386                           ;Main.c: 65: row.selected_node = 0;
   387  007FEE  0E00               	movlw	0
   388  007FF0  6E1D               	movwf	_row+11,c
   389                           
   390                           ;Main.c: 68: row.rgb_bit_shift++;
   391  007FF2  2A1E               	incf	_row+12,f,c
   392                           
   393                           ;Main.c: 69: if (row.rgb_bit_shift >= 4) {
   394  007FF4  0E03               	movlw	3
   395  007FF6  641E               	cpfsgt	_row+12,c
   396  007FF8  0012               	return	
   397                           
   398                           ;Main.c: 70: row.rgb_bit_shift = 0;
   399  007FFA  0E00               	movlw	0
   400  007FFC  6E1E               	movwf	_row+12,c
   401  007FFE  0012               	return	
   402  008000                     __end_of_tick:
   403                           	opt stack 0
   404                           prodh	equ	0xFF4
   405                           prodl	equ	0xFF3
   406                           postinc0	equ	0xFEE
   407                           wreg	equ	0xFE8
   408                           postinc2	equ	0xFDE
   409                           postdec2	equ	0xFDD
   410                           fsr2h	equ	0xFDA
   411                           fsr2l	equ	0xFD9
   412                           status	equ	0xFD8
   413                           
   414 ;; *************** function _updateLeds *****************
   415 ;; Defined at:
   416 ;;		line 10 in file "Driver/LED_Driver.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;  r               1    wreg     unsigned char 
   419 ;;  b               1    0[COMRAM] unsigned char 
   420 ;;  g               1    1[COMRAM] unsigned char 
   421 ;;  s               1    2[COMRAM] unsigned char 
   422 ;; Auto vars:     Size  Location     Type
   423 ;;  r               1    5[COMRAM] unsigned char 
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   433 ;;      Params:         3       0       0       0       0       0       0       0       0
   434 ;;      Locals:         1       0       0       0       0       0       0       0       0
   435 ;;      Temps:          2       0       0       0       0       0       0       0       0
   436 ;;      Totals:         6       0       0       0       0       0       0       0       0
   437 ;;Total ram usage:        6 bytes
   438 ;; Hardware stack levels used:    1
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_tick
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           	psect	text2
   447  007E12                     __ptext2:
   448                           	opt stack 0
   449  007E12                     _updateLeds:
   450                           	opt stack 29
   451                           
   452                           ;incstack = 0
   453                           ;updateLeds@r stored from wreg
   454  007E12  6E06               	movwf	updateLeds@r,c
   455                           
   456                           ;LED_Driver.c: 12: PORTB = 0;
   457  007E14  0E00               	movlw	0
   458  007E16  6E81               	movwf	3969,c	;volatile
   459                           
   460                           ;LED_Driver.c: 15: PORTAbits.RA0 = r;
   461  007E18  B006               	btfsc	updateLeds@r,0,c
   462  007E1A  D002               	bra	u145
   463  007E1C  9080               	bcf	3968,0,c	;volatile
   464  007E1E  D001               	bra	u146
   465  007E20                     u145:
   466  007E20  8080               	bsf	3968,0,c	;volatile
   467  007E22                     u146:
   468                           
   469                           ;LED_Driver.c: 16: PORTAbits.RA1 = g;
   470  007E22  B002               	btfsc	updateLeds@g,0,c
   471  007E24  D002               	bra	u155
   472  007E26  9280               	bcf	3968,1,c	;volatile
   473  007E28  D001               	bra	u156
   474  007E2A                     u155:
   475  007E2A  8280               	bsf	3968,1,c	;volatile
   476  007E2C                     u156:
   477                           
   478                           ;LED_Driver.c: 17: PORTAbits.RA2 = b;
   479  007E2C  B001               	btfsc	updateLeds@b,0,c
   480  007E2E  D002               	bra	u165
   481  007E30  9480               	bcf	3968,2,c	;volatile
   482  007E32  D001               	bra	u166
   483  007E34                     u165:
   484  007E34  8480               	bsf	3968,2,c	;volatile
   485  007E36                     u166:
   486                           
   487                           ;LED_Driver.c: 20: PORTB = 1 << s;
   488  007E36  C003  F004         	movff	updateLeds@s,??_updateLeds
   489  007E3A  0E01               	movlw	1
   490  007E3C  6E05               	movwf	(??_updateLeds+1)& (0+255),c
   491  007E3E  2A04               	incf	??_updateLeds,f,c
   492  007E40  D002               	goto	u174
   493  007E42                     u175:
   494  007E42  90D8               	bcf	status,0,c
   495  007E44  3605               	rlcf	??_updateLeds+1,f,c
   496  007E46                     u174:
   497  007E46  2E04               	decfsz	??_updateLeds,f,c
   498  007E48  D7FC               	goto	u175
   499  007E4A  5005               	movf	??_updateLeds+1,w,c
   500  007E4C  6E81               	movwf	3969,c	;volatile
   501  007E4E  0012               	return		;funcret
   502  007E50                     __end_of_updateLeds:
   503                           	opt stack 0
   504                           prodh	equ	0xFF4
   505                           prodl	equ	0xFF3
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           postinc2	equ	0xFDE
   509                           postdec2	equ	0xFDD
   510                           fsr2h	equ	0xFDA
   511                           fsr2l	equ	0xFD9
   512                           status	equ	0xFD8
   513                           
   514 ;; *************** function _ledDriverInit *****************
   515 ;; Defined at:
   516 ;;		line 6 in file "Driver/LED_Driver.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;  node_count      1    wreg     unsigned char 
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  node_count      1    0[COMRAM] unsigned char 
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   530 ;;      Params:         0       0       0       0       0       0       0       0       0
   531 ;;      Locals:         0       0       0       0       0       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0       0       0       0       0
   533 ;;      Totals:         0       0       0       0       0       0       0       0       0
   534 ;;Total ram usage:        0 bytes
   535 ;; Hardware stack levels used:    1
   536 ;; This function calls:
   537 ;;		Nothing
   538 ;; This function is called by:
   539 ;;		_main
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text3
   544  007DD2                     __ptext3:
   545                           	opt stack 0
   546  007DD2                     _ledDriverInit:
   547                           	opt stack 30
   548                           
   549                           ;incstack = 0
   550  007DD2  0012               	return		;funcret
   551  007DD4                     __end_of_ledDriverInit:
   552                           	opt stack 0
   553                           prodh	equ	0xFF4
   554                           prodl	equ	0xFF3
   555                           postinc0	equ	0xFEE
   556                           wreg	equ	0xFE8
   557                           postinc2	equ	0xFDE
   558                           postdec2	equ	0xFDD
   559                           fsr2h	equ	0xFDA
   560                           fsr2l	equ	0xFD9
   561                           status	equ	0xFD8
   562                           
   563 ;; *************** function _initRowConfig *****************
   564 ;; Defined at:
   565 ;;		line 76 in file "Main.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;  config          2    0[COMRAM] PTR struct .
   568 ;;		 -> row(13), 
   569 ;;  count           1    2[COMRAM] unsigned char 
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  i               1    5[COMRAM] unsigned char 
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   581 ;;      Params:         3       0       0       0       0       0       0       0       0
   582 ;;      Locals:         1       0       0       0       0       0       0       0       0
   583 ;;      Temps:          2       0       0       0       0       0       0       0       0
   584 ;;      Totals:         6       0       0       0       0       0       0       0       0
   585 ;;Total ram usage:        6 bytes
   586 ;; Hardware stack levels used:    1
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text4
   595  007E50                     __ptext4:
   596                           	opt stack 0
   597  007E50                     _initRowConfig:
   598                           	opt stack 30
   599                           
   600                           ;Main.c: 77: config->node_count = count;
   601                           
   602                           ;incstack = 0
   603  007E50  C001  FFD9         	movff	initRowConfig@config,fsr2l
   604  007E54  C002  FFDA         	movff	initRowConfig@config+1,fsr2h
   605  007E58  C003  FFDF         	movff	initRowConfig@count,indf2
   606                           
   607                           ;Main.c: 78: config->selected_node = 0;
   608  007E5C  EE20 F00B          	lfsr	2,11
   609  007E60  5001               	movf	initRowConfig@config,w,c
   610  007E62  26D9               	addwf	fsr2l,f,c
   611  007E64  5002               	movf	initRowConfig@config+1,w,c
   612  007E66  22DA               	addwfc	fsr2h,f,c
   613  007E68  0E00               	movlw	0
   614  007E6A  6EDF               	movwf	indf2,c
   615                           
   616                           ;Main.c: 79: uint8_t i;
   617                           ;Main.c: 80: for (i = 0; i < count; i++) {
   618  007E6C  0E00               	movlw	0
   619  007E6E  6E06               	movwf	initRowConfig@i,c
   620  007E70  D051               	goto	l28
   621  007E72                     
   622                           ;Main.c: 81: config->node_array[i].R = 0;
   623  007E72  5006               	movf	initRowConfig@i,w,c
   624  007E74  0D02               	mullw	2
   625  007E76  0E01               	movlw	1
   626  007E78  26F3               	addwf	prodl,f,c
   627  007E7A  0E00               	movlw	0
   628  007E7C  22F4               	addwfc	prodh,f,c
   629  007E7E  50F3               	movf	prodl,w,c
   630  007E80  2401               	addwf	initRowConfig@config,w,c
   631  007E82  6ED9               	movwf	fsr2l,c
   632  007E84  50F4               	movf	prodh,w,c
   633  007E86  2002               	addwfc	initRowConfig@config+1,w,c
   634  007E88  6EDA               	movwf	fsr2h,c
   635  007E8A  90DF               	bcf	indf2,0,c
   636  007E8C  92DF               	bcf	indf2,1,c
   637  007E8E  94DF               	bcf	indf2,2,c
   638  007E90  96DF               	bcf	indf2,3,c
   639                           
   640                           ;Main.c: 82: config->node_array[i].G = 0;
   641  007E92  5006               	movf	initRowConfig@i,w,c
   642  007E94  0D02               	mullw	2
   643  007E96  0E01               	movlw	1
   644  007E98  26F3               	addwf	prodl,f,c
   645  007E9A  0E00               	movlw	0
   646  007E9C  22F4               	addwfc	prodh,f,c
   647  007E9E  50F3               	movf	prodl,w,c
   648  007EA0  2401               	addwf	initRowConfig@config,w,c
   649  007EA2  6ED9               	movwf	fsr2l,c
   650  007EA4  50F4               	movf	prodh,w,c
   651  007EA6  2002               	addwfc	initRowConfig@config+1,w,c
   652  007EA8  6EDA               	movwf	fsr2h,c
   653  007EAA  98DF               	bcf	indf2,4,c
   654  007EAC  9ADF               	bcf	indf2,5,c
   655  007EAE  9CDF               	bcf	indf2,6,c
   656  007EB0  9EDF               	bcf	indf2,7,c
   657                           
   658                           ;Main.c: 83: config->node_array[i].B = 0;
   659  007EB2  5006               	movf	initRowConfig@i,w,c
   660  007EB4  0D02               	mullw	2
   661  007EB6  0E01               	movlw	1
   662  007EB8  26F3               	addwf	prodl,f,c
   663  007EBA  0E00               	movlw	0
   664  007EBC  22F4               	addwfc	prodh,f,c
   665  007EBE  C001  F004         	movff	initRowConfig@config,??_initRowConfig
   666  007EC2  C002  F005         	movff	initRowConfig@config+1,??_initRowConfig+1
   667  007EC6  50F3               	movf	prodl,w,c
   668  007EC8  2604               	addwf	??_initRowConfig,f,c
   669  007ECA  50F4               	movf	prodh,w,c
   670  007ECC  2205               	addwfc	??_initRowConfig+1,f,c
   671  007ECE  0E01               	movlw	1
   672  007ED0  2404               	addwf	??_initRowConfig,w,c
   673  007ED2  6ED9               	movwf	fsr2l,c
   674  007ED4  0E00               	movlw	0
   675  007ED6  2005               	addwfc	??_initRowConfig+1,w,c
   676  007ED8  6EDA               	movwf	fsr2h,c
   677  007EDA  90DF               	bcf	indf2,0,c
   678  007EDC  92DF               	bcf	indf2,1,c
   679  007EDE  94DF               	bcf	indf2,2,c
   680  007EE0  96DF               	bcf	indf2,3,c
   681                           
   682                           ;Main.c: 84: config->node_array[i].config = 0;
   683  007EE2  5006               	movf	initRowConfig@i,w,c
   684  007EE4  0D02               	mullw	2
   685  007EE6  0E01               	movlw	1
   686  007EE8  26F3               	addwf	prodl,f,c
   687  007EEA  0E00               	movlw	0
   688  007EEC  22F4               	addwfc	prodh,f,c
   689  007EEE  C001  F004         	movff	initRowConfig@config,??_initRowConfig
   690  007EF2  C002  F005         	movff	initRowConfig@config+1,??_initRowConfig+1
   691  007EF6  50F3               	movf	prodl,w,c
   692  007EF8  2604               	addwf	??_initRowConfig,f,c
   693  007EFA  50F4               	movf	prodh,w,c
   694  007EFC  2205               	addwfc	??_initRowConfig+1,f,c
   695  007EFE  0E01               	movlw	1
   696  007F00  2404               	addwf	??_initRowConfig,w,c
   697  007F02  6ED9               	movwf	fsr2l,c
   698  007F04  0E00               	movlw	0
   699  007F06  2005               	addwfc	??_initRowConfig+1,w,c
   700  007F08  6EDA               	movwf	fsr2h,c
   701  007F0A  98DF               	bcf	indf2,4,c
   702  007F0C  9ADF               	bcf	indf2,5,c
   703  007F0E  9CDF               	bcf	indf2,6,c
   704  007F10  9EDF               	bcf	indf2,7,c
   705  007F12  2A06               	incf	initRowConfig@i,f,c
   706  007F14                     l28:
   707  007F14  5003               	movf	initRowConfig@count,w,c
   708  007F16  5C06               	subwf	initRowConfig@i,w,c
   709  007F18  B0D8               	btfsc	status,0,c
   710  007F1A  0012               	return	
   711  007F1C  D7AA               	goto	l29
   712  007F1E                     __end_of_initRowConfig:
   713                           	opt stack 0
   714  0000                     prodh	equ	0xFF4
   715                           prodl	equ	0xFF3
   716                           postinc0	equ	0xFEE
   717                           wreg	equ	0xFE8
   718                           indf2	equ	0xFDF
   719                           postinc2	equ	0xFDE
   720                           postdec2	equ	0xFDD
   721                           fsr2h	equ	0xFDA
   722                           fsr2l	equ	0xFD9
   723                           status	equ	0xFD8
   724                           prodh	equ	0xFF4
   725                           prodl	equ	0xFF3
   726                           postinc0	equ	0xFEE
   727                           wreg	equ	0xFE8
   728                           indf2	equ	0xFDF
   729                           postinc2	equ	0xFDE
   730                           postdec2	equ	0xFDD
   731                           fsr2h	equ	0xFDA
   732                           fsr2l	equ	0xFD9
   733                           status	equ	0xFD8
   734                           
   735                           	psect	rparam
   736  0000                     prodh	equ	0xFF4
   737                           prodl	equ	0xFF3
   738                           postinc0	equ	0xFEE
   739                           wreg	equ	0xFE8
   740                           indf2	equ	0xFDF
   741                           postinc2	equ	0xFDE
   742                           postdec2	equ	0xFDD
   743                           fsr2h	equ	0xFDA
   744                           fsr2l	equ	0xFD9
   745                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      30
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    initRowConfig@config	PTR struct . size(2) Largest target is 13
		 -> row(COMRAM[13]), 


Critical Paths under _main in COMRAM

    _main->_tick
    _tick->_updateLeds

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     893
                                             16 COMRAM     1     1      0
                      _initRowConfig
                      _ledDriverInit
                               _tick
 ---------------------------------------------------------------------------------
 (1) _tick                                                10    10      0     453
                                              6 COMRAM    10    10      0
                         _updateLeds
 ---------------------------------------------------------------------------------
 (2) _updateLeds                                           6     3      3     316
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _ledDriverInit                                        1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _initRowConfig                                        6     3      3     440
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initRowConfig
   _ledDriverInit
   _tick
     _updateLeds

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      1E       1       31.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E      20        0.0%
DATA                 0      0      1E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Jul  8 20:28:39 2019

                     l17 7DFC                       l28 7F14                       l29 7E72  
            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
           __CFG_CPB$OFF 000000                      u204 7F62                      u205 7F5E  
                    u214 7F84                      u215 7F80                      u224 7F96  
                    u145 7E20                      u225 7F92                      u146 7E22  
                    u234 7FB8                      u155 7E2A                      u235 7FB4  
                    u156 7E2C                      u244 7FCA                      u165 7E34  
                    u245 7FC6                      u174 7E46                      u166 7E36  
                    u175 7E42                      u194 7F50             __CFG_CPD$OFF 000000  
                    u195 7F4C                      u277 7E06                      _row 0012  
                    prod 000FF3                      wreg 000FE8             __CFG_FOSC$HS 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     _main 7DE6  
                   _tick 7F1E                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$5 000000                    ?_main 0001  
                  ?_tick 0001                    _PORTB 000F81            __CFG_USBDIV$1 000000  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    tick@b 000E  
                  tick@g 000D                    tick@r 000C                    status 000FD8  
        __initialization 7DD4             __end_of_main 7E12             __end_of_tick 8000  
                 ??_main 0011                   ??_tick 0007            __activetblptr 000000  
 __size_of_initRowConfig 00CE          __CFG_CCP2MX$OFF 000000       initRowConfig@count 0003  
         __CFG_XINST$OFF 000000                   clear_0 7DDA               __accesstop 0060  
__end_of__initialization 7DE0          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
          _initRowConfig 7E50           __pcstackCOMRAM 0001  ledDriverInit@node_count 0001  
         ?_initRowConfig 0001    __end_of_ledDriverInit 7DD4      initRowConfig@config 0001  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
        __CFG_STVREN$OFF 000000                  __pcinit 7DD4                  __ramtop 0800  
                __ptext0 7DE6                  __ptext1 7F1E                  __ptext2 7E12  
                __ptext3 7DD2                  __ptext4 7E50     end_of_initialization 7DE0  
        ??_initRowConfig 0004                  postdec2 000FDD                  postinc0 000FEE  
                postinc2 000FDE                _PORTAbits 000F80               _updateLeds 7E12  
            updateLeds@b 0001              updateLeds@g 0002              updateLeds@r 0006  
            updateLeds@s 0003      start_initialization 7DD4           initRowConfig@i 0006  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0012              ?_updateLeds 0001  
 __size_of_ledDriverInit 0002      __size_of_updateLeds 003E         __CFG_WDTPS$32768 000000  
  __end_of_initRowConfig 7F1E                 __Hrparam 0000                 __Lrparam 0000  
          _ledDriverInit 7DD2            __size_of_main 002C            __size_of_tick 00E2  
         ?_ledDriverInit 0001    __CFG_CPUDIV$OSC1_PLL2 000000             ??_updateLeds 0004  
               tick@node 000F       __end_of_updateLeds 7E50          ??_ledDriverInit 0001  
